// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Category {
  id       Int       @id @unique @default(autoincrement())
  title    String    @unique @db.VarChar(50)
  slug     String    @unique @db.VarChar(50)
  imageUrl String    @db.VarChar(255)
  product  Product[]
}

model Product {
  id              Int        @id @unique @default(autoincrement())
  title           String     @unique @db.VarChar(50)
  slug            String     @unique @db.VarChar(50)
  description     String     @db.Text
  imageUrl        String     @db.VarChar(255)
  price           Decimal    @db.Decimal(9, 2)
  Category        Category?  @relation(fields: [categoryId], references: [id])
  categoryId      Int?
  loveQuantity    LoveCart[]
  ProductQuantity ShopCart[]
}

model User {
  id              String     @id @unique @default(cuid())
  email           String     @unique @db.VarChar(255)
  hashedPassword  String     @unique @db.VarChar(255)
  firstName       String?    @db.VarChar(50)
  lastName        String?    @db.VarChar(50)
  address         String?    @db.VarChar(255)
  phone           String?    @db.VarChar(50)
  image           String?    @db.VarChar(255)
  role            Role       @default(USER)
  loveQuantity    LoveCart[]
  ProductQuantity ShopCart[]
}

enum Role {
  OWNER
  ADMIN
  ADDPRODUCT
  USER
}

model LoveCart {
  id        Int      @id @unique @default(autoincrement())
  quantity  Boolean
  Product   Product? @relation(fields: [productId], references: [id])
  productId Int?
  User      User?    @relation(fields: [userId], references: [id])
  userId    String?
}

model ShopCart {
  id        Int      @id @unique @default(autoincrement())
  quantity  Int
  Product   Product? @relation(fields: [productId], references: [id])
  productId Int?
  User      User?    @relation(fields: [userId], references: [id])
  userId    String?
}
